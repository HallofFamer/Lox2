namespace test.features

val s = "Hello World"
println("Create string object s: ${s}")
println("Class of string object is: ${s.getClass().name()}")
println("Metaclass of string object is: ${s.getClass().getClass().name()}")
println("Class of String metaclass is: ${s.getClass().getClass().getClass().name()}")
println("Class of Metaclass is: ${s.getClass().getClass().getClass().getClass().name()}")
println("Class of Metaclass class is: ${s.getClass().getClass().getClass().getClass().getClass().name()}")
println("")

class Point { 

    __init__(Int x, Int y){      
        this.x = x
        this.y = y
    }

    class Point getHorizontal(Int x){ 
        return this(x, 0)
    }

    class Point getVertical(Int y){ 
        return this(0, y)
    }

    Number distance(Point p){ 
        return ((this.x - p.x).pow(2) + (this.y - p.y).pow(2)).sqrt()
    } 

    String toString(){ 
        return "(${this.x}, ${this.y})"
    }
}

Point.origin = Point(0, 0)

val p = Point(1, 2)
println("Create point object p: ${p}")
val p2 = Point(4, 6)
println("Creating point object p2: ${p2}")
println("Distance between p and p2 is: ${p.distance(p2)}")
println("Point at origin: ${Point.origin}")
println("Creating horizontal point object: ${Point.getHorizontal(2)}")
println("Creating horizontal point object: ${Point.getVertical(3)}")
println("")

println("Class of point object is: ${p.getClass().name()}")
println("Metaclass of point object is: ${p.getClass().getClass().name()}")
println("Class of Point metaclass is: ${p.getClass().getClass().getClass().name()}")
println("Superclass of Point metaclass is: ${p.getClass().getClass().superclass().name()}")
println("Superclass of Object metaclass is: ${p.getClass().getClass().superclass().superclass().name()}")
println("Superclass of Class is: ${p.getClass().getClass().superclass().superclass().superclass().name()}")
println("Superclass of Metaclass is: ${Metaclass.superclass().name()}")
println("Superclass of Metaclass class is: ${Metaclass.getClass().superclass().name()}")
println("Superclass of Behavior is: ${Metaclass.superclass().superclass().name()}")
println("Superclass of Behavior class is: ${Metaclass.getClass().superclass().superclass().name()}")