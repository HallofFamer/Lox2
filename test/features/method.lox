namespace test.features

class Scone { 
    topping(first, second){ 
        println("Scone with " + first + " and " + second)
    }
}

print("Acquiring method object for: ")
val method = Scone.getMethod("topping")
println(method.name())
print("Arity of method is: ")
println(method.arity())
print("Method belongs to: ")
println(method.behavior())
print("Method is native: ")
println(method.isNative())
print("Method is variadic: ")
println(method.isVariadic())
println("")

val scone = Scone()
println("Bound method to receiver: ")
val boundMethod = method.bind(scone)
println(boundMethod.toString())
println("Invoking bound method: ")
boundMethod("berries", "cream")
println("")

println("Getting method dict from Object: ")
val methods = Object.methods()
for(val (name, method) : methods){
   println("Method " + method.behavior().name() + "::" + name + ", arity: " + method.arity().toString())
}