namespace test.features

class Scone { 

    topping(first, second){ 
        println("Scone with ${first} and ${second}")
    }
}

val method = Scone.getMethod("topping")
println("Acquiring method object for: ${method.name()}")
println("Arity of method is: ${method.arity()}")
println("Method belongs to: ${method.behavior()}")
println("Method is native: ${method.isNative()}")
println("Method is variadic: ${method.isVariadic()}")
println("")

val scone = Scone()
val boundMethod = method.bind(scone)
println("Bound method to receiver: ${boundMethod}")
println("Invoking bound method: ")
boundMethod("berries", "cream")
println("")

println("Getting method dict from Object: ")
var methods = Object.methods()
for(val (name, method) : methods){
   println("Method ${method.behavior().name()}::${name}, arity: ${method.arity()}")
}