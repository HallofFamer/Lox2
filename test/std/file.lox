namespace test.std
using clox.std.io.File

val file = File("test/others/file_input.txt")
println("Creating an file object for an existing .txt file: ")
println(file)
println("File exists: ${file.exists()}")
println("File is file: ${file.isFile()}")
println("File is directory: ${file.isDirectory()}")
println("File is readable: ${file.isReadable()}")
println("File is writable: ${file.isWritable()}")
println("File last accessed: ${file.lastAccessed()}")
println("File last modified: ${file.lastModified()}")
println("File size: ${file.size()} bytes")
println("File absolute path: ${file.getAbsolutePath()}")
println("")

val file2 = File("test/others/temp.txt")
println("Creating a file object for a nonexistent .txt file: ")
println(file2)
println("File exists: ${file2.exists()}")
println("Create this temp file:")
file2.create()
println("File exists: ${file2.exists()}")
println("File is readable: ${file2.isReadable()}")
println("File is writable: ${file2.isWritable()}")
println("Set file to be writable...")
file2.setWritable(true)
println("File is writable: ${file2.isWritable()}")
println("Remove this temp file:")
file2.delete()
println("File exists: ${file2.exists()}")
println("")


val dir = File("test/others")
println("Creating a file object for an existing directory.")
println(dir)
println("Directory exists: ${dir.exists()}")
println("Directory is file: ${dir.isFile()}")
println("Directory is directory: ${dir.isDirectory()}")
println("")

val dir2 = File("test/temp")
println("Creating a file object for a nonexistent directory.")
println(dir2)
println("Directory exists: ${dir2.exists()}")
println("Create this temp directory...")
dir2.mkdir()
println("Directory exists: ${dir2.exists()}")
println("Remove this temp directory...")
dir2.rmdir()
println("Directory exists: ${dir2.exists()}")