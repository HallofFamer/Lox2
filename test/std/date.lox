namespace test.std
using clox.std.util.Date
using clox.std.util.DateTime
using clox.std.util.Duration

val nowDate = Date.now
println("Current Date is: ${nowDate}")
println("Current Date's timestamp is: ${nowDate.getTimestamp()}")
println("")

var birthday = Date.parse("1989-05-21")
println("Birthday is: ${birthday}")
println("Birthday's timestamp is: ${birthday.getTimestamp()}")
println("Birthday is before current Date: ${(birthday < nowDate)}")
println("Converting birthday to DateTime: ${birthday.toDateTime()}")
println("");

val nowDateTime = DateTime.now
println("Current DateTime is: ${nowDateTime}")
println("Current DateTime's timestamp is: ${nowDateTime.getTimestamp()}")
println("Birthday is after current DateTime: ${(birthday.toDateTime() > nowDateTime)}")
println("Difference in sec(s) between current DateTime and birthday: ${nowDateTime.diff(birthday.toDateTime())}")
println("")

println("current Date is instance of Date: ${nowDate.instanceOf(Date)}")
println("current Date is instance of DateTime: ${nowDate.instanceOf(DateTime)}")
println("current DateTime is instance of Date: ${nowDateTime.instanceOf(Date)}")
println("current DateTime is instance of DateTime: ${nowDateTime.instanceOf(DateTime)}")

val duration = Duration(1, 15, 80, 280)
println("Creating Duration: ${duration}")
println("Total number of seconds in Duration: ${duration.getTotalSeconds()}")
println("")

val duration2 = Duration.ofDays(1)
println("Creating Duration 2: ${duration2}")
println("Adding two durations: ${(duration + duration2)}")
println("Subtracting two durations: ${(duration - duration2)}")

println("Tomorrow Date: ${(nowDate + duration2)}")
println("Yesterday Date: ${(nowDate - duration2)}")
println("Adding duration to current DateTime: ${(nowDateTime + duration)}")
println("Subtracting duration from current DateTime: ${(nowDateTime - duration)}")